jobs:
  include:

    # start iOS beta
    - &start_beta
      stage: Start Beta
#      if: branch = dev
#      if: branch = dev AND tag IS present
#      if: branch = dev AND tag = true
#      if: branch = /^(\d*).(\d*).(\d*)$/
#      if: tag = true
      if: tag IS present
#      branches:
#        only:
##          - dev
#          - /^(\d*).(\d*).(\d*)$/
#        except:
#          - dev
#          - master
      os: osx
#      osx_image: xcode8.0
      language: generic
      env: Deploy beta to ios testers

      install:
        # fix timezone warning on osx
        - sudo ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime

        # install version of fastlane from Gemfile.lock
        - bundle install > /dev/null

        # install flutter
        - FLUTTER_CHANNEL=stable
        - FLUTTER_VERSION=1.0.0-${FLUTTER_CHANNEL}
        - wget --quiet --output-document=flutter.zip https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/macos/flutter_macos_v${FLUTTER_VERSION}.zip && unzip -qq flutter.zip > /dev/null && rm flutter.zip
        - export PATH="$PATH":"$PWD/.pub-cache/bin"
        - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter doctor -v

      script:
        # fail on error
#        - set -e
        - (cd ios && bundle exec fastlane beta)


    # start android beta
    - stage: Start Beta
#      if: branch = dev
#      if: branch = dev AND tag IS present
#      if: branch = /^(\d*).(\d*).(\d*)$/
#      if: tag = true
      if: tag IS present
#      if: branch = dev AND tag = true
#      branches:
#        only:
##          - dev
#          - /^(\d*).(\d*).(\d*)$/
#        except:
#          - dev
#          - master
#      os: trusty
      env: Deploy beta to android testers
      language: generic
      before_install:
        - ANDROID_COMPILE_SDK=28
        - ANDROID_BUILD_TOOLS=28.0.1
        - ANDROID_SDK_TOOLS=4333796

        # Install android tools
        - export ANDROID_HOME=$HOME/android-sdk-linux
        - wget -q https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_SDK_TOOLS.zip -O android-sdk-tools.zip
        - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
        - rm android-sdk-tools.zip
        - PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools
        # Silence warning.
        - mkdir -p ~/.android
        - touch ~/.android/repositories.cfg
        # install correct version of java on osx (for sdkmanager to run)
#        - brew cask uninstall java; brew tap caskroom/versions; brew cask install java8;
        # Accept licenses before installing components
        - yes | sdkmanager --licenses
        # Platform tools
        - yes | sdkmanager "platform-tools" "platforms;android-${ANDROID_COMPILE_SDK}" "build-tools;${ANDROID_BUILD_TOOLS}" > /dev/null
        - sdkmanager --list | head -15

      install:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null

        # install version of fastlane from Gemfile.lock
        - bundle install > /dev/null

        # install flutter
        - FLUTTER_CHANNEL=stable
        - FLUTTER_VERSION=1.0.0-${FLUTTER_CHANNEL}
        - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz && tar xf flutter.tar.xz > /dev/null && rm flutter.tar.xz
        - export PATH="$PATH":"$PWD/.pub-cache/bin"
        - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter doctor -v

      script:
        # fail on error
#        - set -e

        - (cd android && openssl enc -aes-256-cbc -d -in key.properties.enc -out key.properties -k $KEY_PASSWORD && openssl enc -aes-256-cbc -d -in key.jks.enc -out key.jks -k $KEY_PASSWORD && bundle exec fastlane beta)



#    - <<: *stage
    - stage: Release
      if: branch = master
      os: osx
      language: generic
      env: Deploy to stores
      install:
        # fix timezone warning on osx
        - sudo ln -sf /usr/share/zoneinfo/US/Pacific /etc/localtime

        # install version of fastlane from Gemfile.lock
        - bundle install > /dev/null
      script:
        # fail on error
#        - set -e

        - (cd android && bundle exec fastlane release && cd ../ios && bundle exec fastlane release)
