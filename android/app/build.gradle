def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
def flutterVersionName = localProperties.getProperty('flutter.versionName')

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
       /* release {
            keyAlias keystoreProperties['pethomecare']
            keyPassword keystoreProperties['pethomecare']
            storeFile keystoreProperties['D:\\Projetos\\helpvet\\android\app\\pethomecare_release.jks']
            storePassword keystoreProperties['pethomecare']
        }*/
    }

    android {
        // Sceneform libraries use language constructs from Java 8.
        // Add these compile options if targeting minSdkVersion < 26.
        compileOptions {
            sourceCompatibility 1.8
            targetCompatibility 1.8
        }
    }

    /*signingConfigs {
        release {
            if (System.getenv()["CI"]) { // Configuração para deploy no codemagic
                storeFile file(System.getenv()["FCI_BUILD_DIR"] + "/pethomecare_release.jks")
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                storeFile file("D:\\Projetos\\animal_home_care\\keystore_name.keystore")
                storePassword "helpvet"
                keyAlias "helpvet"
                keyPassword "helpvet"
            }
        }
    }*/

    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "br.com.pet.pethomecare"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 12
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

     buildTypes {
         release {
             signingConfig signingConfigs.release
             minifyEnabled true
             useProguard true
             multiDexEnabled true
             debuggable false
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }

    /*flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"
            applicationIdSuffix ".dev"
        }
        prod {
            dimension "default"
        }
    }*/
}

flutter {
    source '../..'
}


configurations.all
        {
            resolutionStrategy.eachDependency { details ->
                if (details.requested.group == 'androidx.room'
                        && !details.requested.name.contains('room-runtime')) {
                    details.useVersion "2.4.1"
                }
                if (details.requested.group == 'androidx.room'
                        && !details.requested.name.contains('room-testing')) {
                    details.useVersion "2.4.1"
                }
                if (details.requested.group == 'androidx.room'
                        && !details.requested.name.contains('room-rxjava2')) {
                    details.useVersion "2.4.1"
                }
                if (details.requested.group == 'androidx.room'
                        && !details.requested.name.contains('room-common')) {
                    details.useVersion "2.4.1"
                }
                if (details.requested.group == 'androidx.room'
                        && !details.requested.name.contains('room-migration')) {
                    details.useVersion "2.4.1"
                }
                if (details.requested.group == 'androidx.room'
                        && !details.requested.name.contains('room-compiler')) {
                    details.useVersion "2.4.1"
                }
            }
        }

dependencies {
    constraints {
        implementation('io.grpc:grpc-core') {
            version {
                strictly '1.21.0'
            }
        }
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    //def work_version = "2.4.1"
    //implementation "androidx.work:work-runtime:$work_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //implementation "com.google.firebase:firebase-iid:17.0.2"
  /*  api 'com.google.firebase:firebase-ml-vision-image-label-model:20.0.2'
    api 'com.google.firebase:firebase-ml-vision-face-model:20.0.2'*/
    //api 'com.google.firebase:firebase-analytics:17.3.0'
    //implementation 'com.google.firebase:firebase-messaging:17.0.0'
    //api platform('com.google.firebase:firebase-bom:25.12.0')
    //api 'com.google.firebase:firebase-crashlytics:17.0.0-beta03'
    //api 'com.google.firebase:firebase-analytics:17.3.0'
    //api 'com.google.firebase:firebase-perf:18.0.1'
    //implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.8.0'
    //implementation 'com.google.ar.sceneform:core:1.8.0'
    //implementation 'com.google.ar:core:1.8.0'
    //api 'com.google.android.gms:play-services-location:16.0.0'
}
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

